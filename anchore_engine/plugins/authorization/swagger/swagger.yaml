---
swagger: "2.0"

info:
  description: "Anchore Engine Authorization Plugin API. This is expected to be run securely (e.g. same host with no external connectivity)"
  version: "0.1.0"
  title: "Authorization Plugin API"
  contact:
    email: "dev@anchore.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/"
host: "localhost"
schemes:
  - "https"
  - "http"

# securityDefinitions:
#   basicAuth:
#     type: basic
# security:
#   - basicAuth: []
#
produces:
  - application/json
consumes:
  - application/json
paths:
  /health:
    get:
      description: "A healthcheck to call to verify availability. Returns 200 ok"
      responses:
        200:
          description: "Ok healthy"
  /authorize:
    post:
      description: "Authorize a principal against a set of actions"
      parameters:
        - name: authz_request
          in: body
          required: true
          schema:
            $ref: "#/definitions/AuthorizationRequest"
      responses:
        200:
          description: "authorized"
          schema:
            $ref: "#/definitions/AuthorizationDecision"
  /domains:
    post:
      description: Create a new domain, if applicable, in the authz system
      parameters:
        - name: domain
          in: body
          required: true
          schema:
            $ref: "#/definitions/Domain"
      responses:
        200:
          description: Domain init succeeded
    delete:
      description: Delete information about a domain, if applicable
      parameters:
        - name: domain
          in: query
          required: true
          type: string
          description: The name of a domain
      responses:
        200:
          description: Deletion successful
    get:
      description: List known domains, if applicable
      responses:
        200:
          description: Domain name listing
          schema:
            $ref: "#/definitions/DomainList"
  /principals:
    post:
      description: Create a new principal, if applicable, in the authz system
      parameters:
        - name: principal
          in: body
          required: true
          schema:
            $ref: "#/definitions/Principal"
      responses:
        200:
          description: Principal init succeeded
    delete:
      description: Delete information about a principal, if applicable
      parameters:
        - name: principal
          in: query
          required: true
          type: string
          description: The name of a principal
      responses:
        200:
          description: Deletion successful
    get:
      description: List known domains, if applicable
      responses:
        200:
          description: Domain name listing
          schema:
            $ref: "#/definitions/PrincipalList"
definitions:
  AuthorizationRequest:
    description: The input for an authorization decision
    type: object
    required:
      - principal
      - actions
    properties:
      principal:
        $ref: "#/definitions/Principal"
      actions:
        $ref: "#/definitions/ActionSet"
  AuthorizationDecision:
    description: The result of an authorization evaluation
    type: object
    required:
      - principal
      - allowed
      - denied
      - ttl
    properties:
      principal:
        $ref: "#/definitions/Principal"
      allowed:
        $ref: "#/definitions/ActionSet"
      denied:
        $ref: "#/definitions/ActionSet"
      ttl:
        type: integer
        description: An optional ttl for the result. If provided the caller should respect it.
  ActionSet:
    description: A list of actions
    type: array
    items:
      $ref: "#/definitions/Action"
  Action:
    description: An action to be authorized
    type: object
    required:
      - domain
      - action
      - target
    properties:
      domain:
        type: string
        description: The domain for the action and target, typically this is the Anchore Account
      action:
        type: string
      target:
        type: string
  Domain:
    type: object
    description: The name of a domain
    required:
      - name
    properties:
      name:
        type: string
        description: The name of the domain
  Principal:
    type: object
    description: The name of a domain
    required:
      - name
    properties:
      name:
        type: string
        description: The name of the principal
  DomainList:
    type: array
    items:
      $ref: "#/definitions/Domain"
  PrincipalList:
    type: array
    items:
      $ref: "#/definitions/Principal"
