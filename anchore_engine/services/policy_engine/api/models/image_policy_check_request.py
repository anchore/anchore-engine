# coding: utf-8


from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from anchore_engine.services.policy_engine.api.models.base_model_ import Model
from anchore_engine.services.policy_engine.api import util


class ImagePolicyCheckRequest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self, image_id=None, tag=None, user_id=None, bundle=None
    ):  # noqa: E501
        """ImagePolicyCheckRequest - a model defined in Swagger

        :param image_id: The image_id of this ImagePolicyCheckRequest.  # noqa: E501
        :type image_id: str
        :param tag: The tag of this ImagePolicyCheckRequest.  # noqa: E501
        :type tag: str
        :param user_id: The user_id of this ImagePolicyCheckRequest.  # noqa: E501
        :type user_id: str
        :param bundle: The bundle of this ImagePolicyCheckRequest.  # noqa: E501
        :type bundle: object
        """
        self.swagger_types = {
            "image_id": str,
            "tag": str,
            "user_id": str,
            "bundle": object,
        }

        self.attribute_map = {
            "image_id": "image_id",
            "tag": "tag",
            "user_id": "user_id",
            "bundle": "bundle",
        }

        self._image_id = image_id
        self._tag = tag
        self._user_id = user_id
        self._bundle = bundle

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ImagePolicyCheckRequest of this ImagePolicyCheckRequest.  # noqa: E501
        :rtype: ImagePolicyCheckRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_id(self):
        """Gets the image_id of this ImagePolicyCheckRequest.


        :return: The image_id of this ImagePolicyCheckRequest.
        :rtype: str
        """
        return self._image_id

    @image_id.setter
    def image_id(self, image_id):
        """Sets the image_id of this ImagePolicyCheckRequest.


        :param image_id: The image_id of this ImagePolicyCheckRequest.
        :type image_id: str
        """

        self._image_id = image_id

    @property
    def tag(self):
        """Gets the tag of this ImagePolicyCheckRequest.


        :return: The tag of this ImagePolicyCheckRequest.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this ImagePolicyCheckRequest.


        :param tag: The tag of this ImagePolicyCheckRequest.
        :type tag: str
        """

        self._tag = tag

    @property
    def user_id(self):
        """Gets the user_id of this ImagePolicyCheckRequest.


        :return: The user_id of this ImagePolicyCheckRequest.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ImagePolicyCheckRequest.


        :param user_id: The user_id of this ImagePolicyCheckRequest.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def bundle(self):
        """Gets the bundle of this ImagePolicyCheckRequest.


        :return: The bundle of this ImagePolicyCheckRequest.
        :rtype: object
        """
        return self._bundle

    @bundle.setter
    def bundle(self, bundle):
        """Sets the bundle of this ImagePolicyCheckRequest.


        :param bundle: The bundle of this ImagePolicyCheckRequest.
        :type bundle: object
        """

        self._bundle = bundle
