# coding: utf-8


from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from anchore_engine.services.policy_engine.api.models.base_model_ import Model
from anchore_engine.services.policy_engine.api import util


class ImageIngressResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, status=None):  # noqa: E501
        """ImageIngressResponse - a model defined in Swagger

        :param status: The status of this ImageIngressResponse.  # noqa: E501
        :type status: str
        """
        self.swagger_types = {"status": str}

        self.attribute_map = {"status": "status"}

        self._status = status

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ImageIngressResponse of this ImageIngressResponse.  # noqa: E501
        :rtype: ImageIngressResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this ImageIngressResponse.


        :return: The status of this ImageIngressResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ImageIngressResponse.


        :param status: The status of this ImageIngressResponse.
        :type status: str
        """
        allowed_values = ["accepted", "failed", "loaded"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}".format(
                    status, allowed_values
                )
            )

        self._status = status
