# coding: utf-8


from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from anchore_engine.services.policy_engine.api.models.base_model_ import Model
from anchore_engine.services.policy_engine.api import util


class LegacyVulnerabilityReportMultiResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self, rowcount=None, colcount=None, header=None, rows=None
    ):  # noqa: E501
        """LegacyVulnerabilityReportMultiResult - a model defined in Swagger

        :param rowcount: The rowcount of this LegacyVulnerabilityReportMultiResult.  # noqa: E501
        :type rowcount: int
        :param colcount: The colcount of this LegacyVulnerabilityReportMultiResult.  # noqa: E501
        :type colcount: int
        :param header: The header of this LegacyVulnerabilityReportMultiResult.  # noqa: E501
        :type header: List[str]
        :param rows: The rows of this LegacyVulnerabilityReportMultiResult.  # noqa: E501
        :type rows: List[List[str]]
        """
        self.swagger_types = {
            "rowcount": int,
            "colcount": int,
            "header": List[str],
            "rows": List[List[str]],
        }

        self.attribute_map = {
            "rowcount": "rowcount",
            "colcount": "colcount",
            "header": "header",
            "rows": "rows",
        }

        self._rowcount = rowcount
        self._colcount = colcount
        self._header = header
        self._rows = rows

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LegacyVulnerabilityReport_multi_result of this LegacyVulnerabilityReportMultiResult.  # noqa: E501
        :rtype: LegacyVulnerabilityReportMultiResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rowcount(self):
        """Gets the rowcount of this LegacyVulnerabilityReportMultiResult.


        :return: The rowcount of this LegacyVulnerabilityReportMultiResult.
        :rtype: int
        """
        return self._rowcount

    @rowcount.setter
    def rowcount(self, rowcount):
        """Sets the rowcount of this LegacyVulnerabilityReportMultiResult.


        :param rowcount: The rowcount of this LegacyVulnerabilityReportMultiResult.
        :type rowcount: int
        """

        self._rowcount = rowcount

    @property
    def colcount(self):
        """Gets the colcount of this LegacyVulnerabilityReportMultiResult.


        :return: The colcount of this LegacyVulnerabilityReportMultiResult.
        :rtype: int
        """
        return self._colcount

    @colcount.setter
    def colcount(self, colcount):
        """Sets the colcount of this LegacyVulnerabilityReportMultiResult.


        :param colcount: The colcount of this LegacyVulnerabilityReportMultiResult.
        :type colcount: int
        """

        self._colcount = colcount

    @property
    def header(self):
        """Gets the header of this LegacyVulnerabilityReportMultiResult.

        List of column names in the order the values appear in the rows section  # noqa: E501

        :return: The header of this LegacyVulnerabilityReportMultiResult.
        :rtype: List[str]
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this LegacyVulnerabilityReportMultiResult.

        List of column names in the order the values appear in the rows section  # noqa: E501

        :param header: The header of this LegacyVulnerabilityReportMultiResult.
        :type header: List[str]
        """

        self._header = header

    @property
    def rows(self):
        """Gets the rows of this LegacyVulnerabilityReportMultiResult.

        Data rows, each row has the same length and is colcount long  # noqa: E501

        :return: The rows of this LegacyVulnerabilityReportMultiResult.
        :rtype: List[List[str]]
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this LegacyVulnerabilityReportMultiResult.

        Data rows, each row has the same length and is colcount long  # noqa: E501

        :param rows: The rows of this LegacyVulnerabilityReportMultiResult.
        :type rows: List[List[str]]
        """

        self._rows = rows
