# coding: utf-8


from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from anchore_engine.services.policy_engine.api.models.base_model_ import Model
from anchore_engine.services.policy_engine.api.models.legacy_vulnerability_report_multi_result import (
    LegacyVulnerabilityReportMultiResult,
)  # noqa: F401,E501
from anchore_engine.services.policy_engine.api import util


class LegacyVulnerabilityReportMulti(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, url_column_index=None, result=None, warns=None):  # noqa: E501
        """LegacyVulnerabilityReportMulti - a model defined in Swagger

        :param url_column_index: The url_column_index of this LegacyVulnerabilityReportMulti.  # noqa: E501
        :type url_column_index: int
        :param result: The result of this LegacyVulnerabilityReportMulti.  # noqa: E501
        :type result: LegacyVulnerabilityReportMultiResult
        :param warns: The warns of this LegacyVulnerabilityReportMulti.  # noqa: E501
        :type warns: List[str]
        """
        self.swagger_types = {
            "url_column_index": int,
            "result": LegacyVulnerabilityReportMultiResult,
            "warns": List[str],
        }

        self.attribute_map = {
            "url_column_index": "url_column_index",
            "result": "result",
            "warns": "warns",
        }

        self._url_column_index = url_column_index
        self._result = result
        self._warns = warns

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LegacyVulnerabilityReport_multi of this LegacyVulnerabilityReportMulti.  # noqa: E501
        :rtype: LegacyVulnerabilityReportMulti
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url_column_index(self):
        """Gets the url_column_index of this LegacyVulnerabilityReportMulti.

        The index for the url column, for parsing  # noqa: E501

        :return: The url_column_index of this LegacyVulnerabilityReportMulti.
        :rtype: int
        """
        return self._url_column_index

    @url_column_index.setter
    def url_column_index(self, url_column_index):
        """Sets the url_column_index of this LegacyVulnerabilityReportMulti.

        The index for the url column, for parsing  # noqa: E501

        :param url_column_index: The url_column_index of this LegacyVulnerabilityReportMulti.
        :type url_column_index: int
        """

        self._url_column_index = url_column_index

    @property
    def result(self):
        """Gets the result of this LegacyVulnerabilityReportMulti.


        :return: The result of this LegacyVulnerabilityReportMulti.
        :rtype: LegacyVulnerabilityReportMultiResult
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this LegacyVulnerabilityReportMulti.


        :param result: The result of this LegacyVulnerabilityReportMulti.
        :type result: LegacyVulnerabilityReportMultiResult
        """

        self._result = result

    @property
    def warns(self):
        """Gets the warns of this LegacyVulnerabilityReportMulti.

        Array of warning messages generated during the last cve scan, if any  # noqa: E501

        :return: The warns of this LegacyVulnerabilityReportMulti.
        :rtype: List[str]
        """
        return self._warns

    @warns.setter
    def warns(self, warns):
        """Sets the warns of this LegacyVulnerabilityReportMulti.

        Array of warning messages generated during the last cve scan, if any  # noqa: E501

        :param warns: The warns of this LegacyVulnerabilityReportMulti.
        :type warns: List[str]
        """

        self._warns = warns
